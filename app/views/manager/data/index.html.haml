.navbar.navbar-static-top
  .navbar-inner
    = form_tag manager_data_path, method: 'GET', class: 'navbar-form form-search' do
      .input-append
        = text_field_tag 'search[q]', @search[:q], class: 'search-query span8', placeholder: "Search"
        = submit_tag 'Search', class: 'btn btn-primary'
        
      = link_to new_manager_datum_path, class: 'btn btn-success pull-right' do
        %i.icon-plus.icon-white
        New Record
      %ul.nav
        %li.dropdown
          %a{ id: "collections", href: "#", class: "dropdown-toggle", data: {toggle: "dropdown"} }
            Add to collection
            %b.caret
          %ul.dropdown-menu
            -@setup.catalog_collections.each do |coll|
              %li
                %a{ id: coll.id, href: "#", class: "navbar-text", onclick: "CollToggle(#{coll.id})"}
                  = coll.name

= paginate @catalogs
%table.table.table-bordered.table-striped.table-condensed
  %thead
    %tr
      %th
        = link_to("#", id: "check-toggle", class: "btn btn-mini", title: "Toggle Check-Boxes", onclick: "CheckToggle()") do
          %i.icon-search.icon-arrow-down
      %th Title
      %th Type
      %th Status
      %th Start year
      %th End year
      %th Source agency
      %th Primary contact
      %th Long Term
  %tbody
    - @catalogs.each do |item|
      %tr
        %td{style:"text-align:center; padding:0;"}
          %label{for: "coll_check_#{item.id}", style: "display:block; padding-bottom: 50px;"}
            = check_box_tag "coll_check[#{item.id}]", item.id
        
        %td
          = link_to item.title.truncate(70), manager_datum_path(item)
          - unless item.short_description.nil?
            %br/
            %small= item.short_description.try(:humanize)
          - if item.tags.size > 0
            %br/
            %small.muted
              %b Tags:
              = item.tags.list
          - if item.catalog_collections.size > 0
            %br/
            %small.muted
              %b Collections:
              = item.catalog_collections.list
        %td= item.type.humanize
        %td= item.status.try(:humanize)
        %td= item.start_date.try(:year)
        %td= item.end_date.try(:year)
        %td= item.source_agency
        %td= item.primary_contact
        %td= item.long_term_monitoring ? 'Yes' : 'No'

= paginate @catalogs

:javascript
  function CheckToggle()
    {
    $('input:checkbox').attr("checked", function()
      {
      if ($(this).attr("checked"))
        {
        $(this).prop("checked", false);
        }
      else
        {
        $(this).prop("checked", true);
        }
      });
    };

  function CollToggle(coll_id)
    {  
    check_list = [];
    $('input:checkbox').attr("checked", function()
      {
      if ($(this).attr("checked"))
        {
        check_list.push($(this).val());
        }
      });
    $.ajax(
      {
      url: "#{manager_catalog_collections_path}/" + coll_id + '/add',
      type: 'PUT',
      data:
        {
        "catalog_ids[]": check_list
        },
      complete: function(){
        location.reload();
      }
      });
    };

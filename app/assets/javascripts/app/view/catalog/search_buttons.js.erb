/**
 * @class App.view.catalog.search_buttongroup
 * @extends Ext.container.ButtonGroup
 * Description
 */
Ext.define('App.view.catalog.search_buttons', {
  extend: 'Ext.container.ButtonGroup', 
  alias: 'widget.catalog_search_buttons',

  initComponent: function() {
    Ext.apply(this, {
      defaults: { minWidth: 70, scale: 'small', iconAlign: 'top', iconCls: 'contact-icon' },
      cls: 'catalog_search_buttons',
      items: [{
        iconCls: 'filter-icon',
        text: 'Filter By',
        menu: this.filterMenu()
      }, { 
        xtype: 'button', 
        text: 'Apply Search Filters', 
        // disabled: true,
        // cls: 'apply',
        iconCls: 'filter-icon',
        action: 'apply', 
        // scale: 'large'
      }, {
        xtype: 'button',
        text: 'Clear Filters',
        action: 'clear_filters',
        // scale: 'large',
        iconCls: 'small-cancel-icon'
      }, this.sortBy()]
    });        

    this.callParent(arguments);
  },
  filterMenu: function() {
    return [{
      text: 'Agency',
      iconCls: 'agency-icon',
      action: 'filter',
      filterType: 'agencyselector',
      field: 'agency_ids',
      description: 'Agency: {name}'
    }, {
      text: 'Contact',
      iconCls: 'contact-icon',
      action: 'filter',
      filterType: 'contactselector',
      field: 'contact_ids',
      description: 'Contact: {full_name}'
    }, {
      text: 'Data Type',
      iconCls: 'data-icon',
      menu: <%= 
        DataType.all.collect do |i| 
          { 
            text: i.name, 
            action: 'filter', 
            filterType: 'multiple', 
            field: 'data_types', 
            value: i.name, 
            description: "Data Type: #{i.name}"  
          } 
        end.to_json %>
    }, {
      text: 'ISO Theme',
      iconCls: 'data-icon',
      action: 'filter',
      filterType: 'isothemeselector',
      field: 'iso_topic_ids',
      description: 'ISO Theme: {name}'
    }, {
      text: 'Long Term Monitoring',
      iconCls: 'data-icon',
      menu: [{
        text: 'Yes',
        action: 'filter',
        filterType: 'single',
        field: 'long_term_monitoring',
        value: '1',
        description: 'Long Term Monitoring: Yes'
      }, {
        text: 'No',
        action: 'filter',
        filterType: 'single',
        field: 'long_term_monitoring',
        value: '0',
        description: 'Long Term Monitoring: No'
      }]   
    }, {
      text: 'Project/Data',
      iconCls: 'data-icon',
      menu: [{
        text: 'Project',
        field: 'type',
        value: 'Project',
        action: 'filter',
        filterType: 'single',
        description: 'Show Projects Only'
      }, {
        text: 'Data',
        field: 'type',
        value: 'Asset',
        action: 'filter',
        filterType: 'single',
        description: 'Show Data Only'
      }] 
    }, {
      text: 'Source',
      iconCls: 'source-icon',
      filterType: 'sourceselector',
      action: 'filter',
      field: 'source_agency_id',
      description: 'Source Agency: {name}'
    }, {
      text: 'Status',
      iconCls: 'status-icon',
      menu: [{
        text: 'Ongoing',
        field: 'status',
        filterType: 'single',
        action: 'filter',
        value: 'Ongoing',
        description: 'Status: Ongoing'
      }, {
        text: 'Complete',
        field: 'status',
        filterType: 'single',
        action: 'filter',
        value: 'Complete',
        description: 'Status: Complete'
      }, {
        text: 'Unknown',
        field: 'status',
        filterType: 'single',
        action: 'filter',
        value: 'Unknown',
        description: 'Status: Unknown'
      }, {
        text: 'Local',
        field: 'status',
        filterType: 'single',
        action: 'filter',
        value: 'Local',
        description: 'Status: Local'
      }, {
        text: 'Remote',
        field: 'status',
        filterType: 'single',
        action: 'filter',
        value: 'Remote',
        description: 'Status: Remote'
      }]
    }, {
      text: 'Starting Year',
      field: 'start_date',
      value: 'Start Date',
      action: 'filter',
      filterType: 'dateselector',
      description: 'Starting Year {type} {year}',
      iconCls: 'calendar-icon'
    }, {
      text: 'Ending Year',
      field: 'end_date',
      value: 'End Date',
      action: 'filter',
      filterType: 'dateselector',
      description: 'Ending Year {type} {year}',
      iconCls: 'calendar-icon'
    }, {
      text: 'Region',
      iconCls: 'region-icon',
      menu: [{
        text: 'Alaska',
        field: 'region',
        value: "Alaska",
        action: 'filter',
        filterType: 'single',
        description: 'Region Alaska'
      }, {
        text: 'Northslope',
        field: 'region',
        value: "Northslope Borough",
        action: 'filter',
        filterType: 'single',
        description: 'Region Northslope'
      }]
    }, {
      text: 'AOI',
      action: 'aoi',
      iconCls: 'aoi-icon'
    }];
  },
  sortBy: function(){
    return {
      xtype: 'button',
      text: 'Sort By',
      iconCls: 'sort-icon',
      menu: [{
        text: 'Title',
        group: 'sort', xtype: 'menucheckitem',
        hideOnClick: false,
        menu: this.directionMenu("title_sort","Sort by title")
      },{
        text: 'Project/Data',
        group: 'sort', xtype: 'menucheckitem',
        hideOnClick: false,
        menu: this.directionMenu("type","Sort by project/data")
      },{
        text: 'Source',
        group: 'sort', xtype: 'menucheckitem',
        hideOnClick: false,
        menu: this.directionMenu("source_agency_acronym","Sort by source agency")
      },{
        text: 'Status',
        group: 'sort', xtype: 'menucheckitem',
        hideOnClick: false,
        menu: this.directionMenu("status","Sort by status")
      },{
        text: 'Start Date',
        group: 'sort', xtype: 'menucheckitem',
        hideOnClick: false,
        menu: this.directionMenu("start_date_year","Sort by start date")
      },{
        text: 'End Date',
        group: 'sort', xtype: 'menucheckitem',
        hideOnClick: false,
        menu: this.directionMenu("end_date_year","Sort by end date")
      }]
    };
  },
  directionMenu: function( val, description) {
    return [{
      text: 'Ascending',
      group: 'direction', xtype: 'menucheckitem',
      field: 'order_by',
      action: 'filter',
      filterType: 'single',
      value: val + "-asc",
      description: description + " ascending",
      immediateSearch: true,
      scope: this,
      checkHandler: this.checkHandler
    }, {
      text: 'Descending',
      group: 'direction', xtype: 'menucheckitem',
      field: 'order_by',
      action: 'filter',
      filterType: 'single',
      value: val + "-desc",
      description: description + " descending",
      immediateSearch: true,
      scope: this,
      checkHandler: this.checkHandler
    }];
  },

  checkHandler: function(menu, checked) {
    if(checked) {
      var parent = menu.parentMenu.parentItem;

      parent.setChecked(true);
    }
  }
});
//= require_tree ./gina
//= require_self
//= require      ./gina-map-layers/gina-openlayers.js
//= require      ./gina-map-layers/projections/all.js
//= require      ./extjs-openlayers/Basic.js
//= require_tree ./app/model
//= require_tree ./app/store
//= require_tree ./app/view
//= require_tree ./app/controller


//Ext.Loader.setConfig({
//  enabled: false,
//  paths: {
//    'Ext': '/assets',
//    'App': '/assets/app',
//    'Ext.OpenLayers': '/assets/openlayers'
//  }
//});
// OpenLayers.ImgPath = "/assets/openlayers/";

Ext.define('App', {
  singleton: true,
  init: function(sys) {
    this.sys = sys;
    
    // this.nav = Ext.create('Ext.gina.NavigationHandler', {
    //   manager: this,
    //   defaultPage: 'home',
    //   autoStart: false,
    //   appRootUrl: /^[\/]{0,1}$/,

    //   pages: {
    //     catalog: {
    //       title: 'Catalog',
    //       icon: "<%= image_path 'icons/medium/bookmark.png' %>"
    //     },
    //     news: {
    //       title: 'News',
    //       icon: "<%= image_path 'icons/medium/chat-.png' %>"
    //     },
    //     nssi: {
    //       title: 'NSSI',
    //       url: 'http://www.northslope.org',
    //       mode: 'window',
    //       icon: "<%= image_path 'icons/medium/globe.png' %>"
    //     },
    //     realtime: {
    //       title: 'Realtime Data',
    //       url: 'http://realtime.hub.gina.alaska.edu',
    //       mode: 'window',
    //       icon: "<%= image_path 'icons/medium/satellite.png' %>"
    //     },
    //     contact: {
    //       title: 'Contact Us',
    //       icon: "<%= image_path 'icons/medium/email.png' %>"
    //     },
    //     help: {
    //       title: 'Help',
    //       icon: "<%= image_path 'icons/medium/male-user.png' %>"
    //     },
    //     signup: {
    //       title: 'Signup',
    //       url: 'http://id.gina.alaska.edu/#signup',
    //       mode: 'redirect',
    //       iconCls: 'navigation-agent'
    //     },
    //     login: {
    //       title: 'Login',
    //       url: '/login',
    //       iconCls: 'navigation-lock',
    //       mode: 'redirect'
    //     },
    //     logout: {
    //       title: 'Logout',
    //       url: '/logout',
    //       iconCls: 'navigation-lock',
    //       mode: 'redirect'
    //     }
    //   }
    // });
    
    this.header = Ext.widget('catalog_navigation_toolbar', {
      dock: 'top',
      cls: 'main-toolbar',
      layout: { type: 'hbox', align: 'stretch' },
      border: false,
      items: [{
        flex: 1,
        bodyStyle: 'background: #187b99;',
        border: false,
        contentEl: 'header',
        xtype: 'panel'
      }]
    });

    this.current_user = Ext.create('Ext.gina.CurrentUser', {
      listeners: {
        'logged_in': Ext.bind(this.header.loggedIn, this.header)
      }
    });
    this.current_user.load();
  },

  showLoading: function(msg) {
    return Ext.Msg.show({
      title: 'Please wait...',
      msg: msg || 'Loading...',
      minWidth: 300,
      wait: true,
      modal: false
    });
  },
  hideLoading: function() { return Ext.Msg.hide(); }
});

Ext.application({
  name: 'App',
  appFolder: '/assets/app',
  controllers: [
    'Catalog', 'Asset', 'Help', 'News', 'Feedback', 'Video', 
    'Search', 'Map', 'Rails', 'Links'
  ],
  launch: function() {
    Ext.util.History.init();
    App.init(this);
    
    // App.current_user.on('logged_out', function() {

    // }, this);

    App.viewport = Ext.create('Ext.container.Viewport', {
      layout: 'border',
      defaults: { border: false },
      items: [{
        itemId: 'center',
        region: 'center',
        border: false,
        layout: 'card',
        deferredRender: false,
        dockedItems: [App.header],
        listeners: {
          /* TODO: Remove this, for now it is required as a work around for a bug in Ext-4.1.0-beta3 */
          render: Ext.emptyFn
        },
        items: [{
          html: 'Loading...'
        }]
      }, {
        region: 'south',
        contentEl: 'footer'
      }]
    });

    var controller, path = top.location.pathname;
    switch(true) {
      case path == '/':
        controller = this.getController('Catalog');
        break;
      case /^\/videos/.test(path):
        controller = this.getController('Video');
        break;
      case /^\/asset/.test(path):
        controller = this.getController('Asset');
        break;
      default:
        controller = this.getController('Rails');
        break;
    }
    controller.show();
  }
});
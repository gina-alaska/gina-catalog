= form_for [:manager, page], remote: true, html: { id: 'page_content_form' } do |f|
  - if page.errors.any?
    #error_explanation.alert.alert-error
      %h4
        = pluralize(page.errors.count, "error")
        prohibited this page from being saved:
      %ul
        - page.errors.full_messages.each do |msg|
          %li= msg
          
  .control-group
    = f.label :title, class: 'control-label'
    .controls
      = f.text_field :title, class: 'span12'
      
  = link_to 'Advanced Options', '#advanced', data: { toggle: 'collapse' }
  %fieldset#advanced.collapse
    .control-group
      = f.label :slug, class: 'control-label'
      .controls
        = f.text_field :slug, value: page.slug_without_path, class: 'span12'
    :javascript
      $('#page_content_slug').slugify('#page_content_title');

    .row-fluid
      .span12
        .control-group
          = f.label "Redirect to URL", class: 'control-label'
          .controls
            = f.text_field :redirect, class: 'span12'
    .row-fluid
      .span6
        .control-group
          = f.label :parent_id, class: 'control-label'
          .controls
            = f.select :parent_id, nested_set_options(current_setup.pages, page) {|i| "#{'-' * i.level} #{i.title}" }, include_blank: true
        .control-group
          = f.label :page_layout_id, 'Layout', class: 'control-label'
          .controls
            = f.collection_select :page_layout_id, current_setup.layouts, :id, :name, {}, { class: 'span12' }
        %label.checkbox
          =f.check_box :main_menu
          Show in Main Menu
        .control-group
          = f.label :menu_icon, 'Menu Icon', class: 'control-label'
          .controls
            = f.select :menu_icon, Page::Content::ICONS, {include_blank: true}, class: 'menu-icons span12'
      .span6
        .control-group
          = f.label :description, class: 'control-label'
          .controls
            = f.text_area :description, class: 'span12', rows: 10

  #page_tabs.tabbable
    %ul.nav.nav-tabs
      - page.sections.each do |section|
        %li{class:(section == page.sections.first ? 'active' : '')}= link_to section.humanize, "##{section}", data: { toggle: 'tab'}
      %li{id: 'new_page_tab'}
        =link_to "#", id: 'new_page_btn', data: {toggle: "modal", target:"#new_page_modal"} do
          %i.icon-plus
      
  #page_content.tab-content
    - page.content.each do |name,content|
      .tab-pane{id:name, class:(name == page.sections.first ? 'active' : '')}
        - if name == 'images'
          = render 'images', page: page
        - else
          %div.ace{ data: { editor: 'ace' } }
            = render 'editor_toolbar'
            = text_area_tag "page_content[content][#{name}]", content, style:"display: none;"
  .form-actions.form-inline{style:'margin-top: 0;'}
    = link_to manager_page_contents_path, class: 'btn' do 
      %i.icon-arrow-left
      Back
    .pull-right
      %label.checkbox
        = f.check_box :draft
        .label.label-warning Make Draft
      / = link_to_function 'Preview', 'preview_page()', class: 'btn'
      = f.submit 'Save', class: 'btn btn-primary', data: { 'disable-with' => "Saving..." }
      = f.submit 'Save and Close', class: 'btn btn-primary', data: { 'disable-with' => "Saving..." }

= render 'image_chooser', page: page unless page.new_record?
= render 'insert_image_chooser', page: page

#link_chooser.modal.hide.fade
  .modal-header
    %button.close{type:'button', data: { dismiss: 'modal' }} &times;
    %h3 Add Link
  .modal-body
    .tabbable.tabs-left
      %ul.nav.nav-tabs
        %li.active= link_to 'Choose page', '#page-list', data: { toggle: 'tab' }
        %li= link_to 'Enter URL', '#enter-url', data: { toggle: 'tab' }
      .tab-content
        #page-list.active.tab-pane
          %form#choose-page.form-inline
            .control-group
              %label.control-label Select a page:
              .controls
                - opts = awesome_set_options(current_setup.pages.roots, :slug_with_root) { |i| "#{'-'*i.level} #{i.title}"}
                = select_tag 'url', options_for_select(opts), prompt: 'Select a page'
            .control-group.offset1
              %label.checkbox
                = check_box_tag 'target', '_blank'
                Open new window?
                
            = submit_tag 'Add Link', class: 'btn btn-primary pull-right'
        #enter-url.tab-pane
          %form#add-link-form.form-inline
            .control-group
              %label.control-label Enter URL:
              .controls
                = text_field_tag 'url', '', placeholder: 'http://example.com', class: 'span12'
            .control-group.offset1
              %label.checkbox
                = check_box_tag 'target', '_blank'
                Open new window?
                
            = submit_tag 'Add Link', class: 'btn btn-primary pull-right'
        
:javascript
  var editors = new AceEditor('[data-editor="ace"]');

  editors.addHandler('link', function(editor, btn, ace) {
    $('#link_chooser').modal();  
    $('#link_chooser').on('hidden', function() {
      // Reset these forms
      $('#choose-page')[0].reset();
      $('#add-link-form')[0].reset();
      $('#link_chooser form').unbind('submit');
      $('#link_chooser a:first').tab('show');
    });
    
    $('#link_chooser form').on('submit', function(evt) {
      evt.preventDefault();
      var url = $(this).find('[name="url"]').val();
      var target = '';
      
      if( $(this).find('[name="target"]').is(':checked') ) {
        target = $('[name="target"]').val();
      }
      $('#link_chooser').modal('hide');
      
      var link = '<a href="'+url+'" target="'+target+'">';
      ace.wrapSelectionWithTags(editor, link, "</a>")
    });
  });
  
  editors.addHandler('picture', function(editor, btn, ace) {
    $('#insert_image_chooser_modal').modal();
    
    var addImage = function() {
      var src = $(this).data("src");
      var alt = $(this).data("alt");
      var tag = '<img src="'+src+'" alt="'+alt+'" />';
      
      ace.wrapSelectionWithTags(editor, tag);
      $('#insert_image_chooser_modal').modal('hide');
    }
    
    $('#insert_image_chooser_modal').on('hidden', function() {
      $('#insert_image_chooser_modal a[data-behavior="add"]').unbind('click', addImage);
    });
    
    $('#insert_image_chooser_modal a[data-behavior="add"]').on('click', addImage);
  });

  
  function format_menu_icon_select(item) {
    return "<i class='" + $(item.element).val() + "'></i>&nbsp;" + item.text
  }

  $('select.menu-icons').select2({
    formatResult: format_menu_icon_select,
    formatSelection: format_menu_icon_select,
    escapeMarkup: function(m) { return m; }
  })
  function preview_page() {
    var form = $('#page_content_form'),
        action = form.attr('action'); 
    form.attr('action', action + '/preview'); 
    form.attr('target', '_blank');
    form.data('remote', false);
    form.submit();
    //Reset form back to normal so later saves work correctly
    form.attr('action', action);
    form.attr('target', '');
    form.data('remote', true);
  }
/ = render 'manager/page_layouts/new_page', page: page
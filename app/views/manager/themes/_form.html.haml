= form_for [:manager, theme], html: { class: '' } do |f|
  - if theme.errors.count > 0
    .alert.alert-error
      %ul
        - theme.errors.full_messages.each do |msg|
          %li= msg
          
  .control-group
    = f.label :name, class: 'control-label'
    .controls
      = f.text_field :name, class: 'span12'
  %ul.nav.nav-tabs
    %li.active
      = link_to "#theme-colors", data: {toggle: "tab"} do
        Theme Colors
    %li
      = link_to "#theme-css", data: {toggle: "tab"} do
        Theme CSS
  .tab-content
    .tab-pane.active#theme-colors
      = render 'theme_color', f: f
    .tab-pane#theme-css
      = render 'theme_css', f: f
  .form-actions
    = link_to manager_page_contents_path, class: 'btn' do
      %i.icon-arrow-left
      Back
  
    .pull-right
      = f.submit 'Save', class: 'btn btn-primary', data: { 'disable-with' => "Saving..." }
      = f.submit 'Save and Close', class: 'btn btn-primary', data: { 'disable-with' => "Saving..." }
      
:javascript
  $("[data-color-format]").colorpicker();
  $(document).on('change', "[data-color-format] input", function(evt) {
    var color = $(this).val();
    $(this).parent('[data-color-format]').colorpicker('setValue', color);
  });

  $('#theme-colors a').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
  })

  $('#theme-css a').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
  })

Ext.define('Manager.view.agencies.Form', {
  extend: 'Ext.form.Panel',
  alias: 'widget.agencies_form',

  config: {
    recordId: null,
    recordType: 'agency'
  },
  
  titleTpl: new Ext.Template('Edit {id}::{name}'),

  constructor: function(config) {
    this.initConfig(config);
    this.callParent(arguments);
  },

  categoryStore: new Ext.data.Store({
    fields: ['category'],
    data: [
      <%= Agency::CATEGORIES.collect{|a|  "{ category: '#{a}'}"}.join "," %>
    ]
  }),

  initComponent: function() {
    this.link_count = 0;
    this.location_count = 0;
    
    var links = [];
    
    Ext.apply(this, {
      title: 'Loading...',
      autoScroll: true,
      closable: true,
      border: true,
      fieldDefaults: { anchor: '100%', labelAlign: 'top' },
      defaults: { bodyStyle: 'padding: 3px;', layout: 'anchor', margin: '3 3 0 3' },
      dockedItems: [{
        xtype: 'toolbar', dock: 'bottom', ui: 'footer', cls: 'edit',
        defaults: { scale: 'large', minWidth: 100 },
        items: ['->', 
          { text: 'Cancel',action: 'cancel'}, 
          { text: 'Save', action: 'save' }
        ]
      }],
      layout: { type: 'hbox', pack: 'center' },
      items: [{
        border: false,
        width: 500,
        items: [       
          { xtype: 'textfield', fieldLabel: 'Name', name: 'name' }, 
          { xtype: 'textarea', fieldLabel: 'Description', name: 'description', height: 180 },
          { 
            xtype: 'combobox', 
            fieldLabel: 'Category', 
            name: 'category',
            store: this.categoryStore,
            queryMode: 'local',
            displayField: 'category',
            valueField: 'category'
          },
          { xtype: 'textfield', fieldLabel: 'Acronym', name: 'acronym' },
          { 
            xtype: 'fieldcontainer',
            fieldLabel: 'Active',
            defaultType: 'radiofield',
            layout: 'hbox',
            items: [{
              flex: 1,
              boxLabel: 'Yes',
              name: 'active',
              inputValue: true,
              margin: '0 0 0 20'
            },{
              flex: 3,
              boxLabel: 'No',
              name: 'active',
              inputValue: false,
              checked: true
            }]
          }
        ]
      }]

    });       
    this.callParent(arguments);

    if(this.getRecordId()) {
      Ext.Ajax.request({
        url: '/agencies/' + this.getRecordId() + '.json',
        success: this.onRequestSuccess,
        scope: this
      });        
    } else {
      this.setTitle('New Agency');
    }
  },

  onRequestSuccess: function(response) {
    console.log(response)
    this.loadRecordData(Ext.JSON.decode(response.responseText));
  },

  loadRecordData: function(record){
    this.record = record;
    this.setTitle(this.titleTpl.apply(this.record));
    this.getForm().setValues(this.record);

  },
});
/**
 * @class Manager.view.project.Edit
 * @extends Ext.panel.Panel
 * Edit Panel for Projects
 */
Ext.define('Manager.view.project.Edit', {
    extend: 'Ext.form.Panel', 
    alias: 'widget.project_edit',

    config: {
      recordId: null
    },
    
    titleTpl: new Ext.Template('Edit {id}::{title}'),

    constructor: function(config) {
      this.initConfig(config);
      this.callParent(arguments);
    },

    initComponent: function() {
      this.link_count = 0;
      this.location_count = 0;
      
      var source_agencies = Ext.create('Manager.store.Agencies', { autoLoad: true });
      var primary_contacts = Ext.create('Manager.store.Contacts', { autoLoad: true });
      
      var links = [];
      
      Ext.apply(this, {
        title: 'Loading...',
        autoScroll: true,
        closable: true,
        border: true,
        fieldDefaults: { anchor: '100%', labelAlign: 'top' },
        defaults: { layout: 'anchor', margin: '3 3 0 3' },
        dockedItems: [{
          xtype: 'toolbar',
          dock: 'bottom',
          ui: 'footer',
          cls: 'edit',
          defaults: { scale: 'large', minWidth: 100 },
          items: ['->', {
            text: 'Cancel'
          }, {
            text: 'Save',
            action: 'save'
          }]
        }],
        items: [{
          itemId: 'general', xtype: 'panel', title: 'General',
          bodyStyle: 'padding: 3px;',
          items: [
            { xtype: 'textfield', fieldLabel: 'Title', name: 'title' }, 
            { xtype: 'textarea', fieldLabel: 'Description', name: 'description' }, 
            {
              layout: 'column',
              border: false,
              items: [{
                border: false,
                columnWidth: 0.33,
                layout: 'anchor',
                items: [
                  { xtype: 'datefield', fieldLabel: 'Start Date', name: 'start_date', anchor: '100%' },
                  {
                    xtype: 'combobox', fieldLabel: 'Status', name: 'status', queryMode: 'local',
                    store: 'ProjectStatus',  displayField: 'status', valueField: 'status'
                  }
                ]
              }, {
                border: false,
                layout: 'anchor',
                columnWidth: 0.33,
                margin: '0 0 0 3',
                items: [
                  { xtype: 'datefield', fieldLabel: 'End Date', name: 'end_date', anchor: '100%' },
                  { 
                    xtype: 'fieldcontainer',
                    fieldLabel: 'Long Term Monitoring',
                    defaultType: 'radiofield',
                    defaults: { flex: 1},
                    layout: 'hbox',
                    items: [{
                      boxLabel: 'Yes',
                      name: 'long_term_monitoring',
                      inputValue: true
                    },{
                      boxLabel: 'No',
                      name: 'long_term_monitoring',
                      inputValue: false,
                      checked: true
                    }]
                  }
                ]
              }, {
                border: false,
                layout: 'anchor',
                columnWidth: 0.34,
                margin: '0 0 0 3',
                items: [{
                  xtype: 'combobox', fieldLabel: 'Owner', queryMode: 'remote', queryDelay: 100,
                  triggerAction: 'all', minChars: 2, typeAhead: true, name: 'owner_id', store: 'Users',
                  displayField: 'fullname_with_email', valueField: 'id'
                }]
              }, {
                border: false,
                layout: 'anchor',
                columnWidth: 0.25,
                margin: '0 0 0 3',
                items: []
              }]
            },
            { xtype: 'textfield', fieldLabel: 'Tags', name: 'tags' }, 
            {
              xtype: 'combobox', fieldLabel: 'Geo-Tags', queryMode: 'local', triggerAction: 'all',
              name: 'geokeyword_ids', multiSelect: true, editable: false, store: 'Geokeywords',
              displayField: 'name', valueField: 'id'
            }, {
              xtype: 'combobox', fieldLabel: 'ISO Topic Category', queryMode: 'local', triggerAction: 'all',
              name: 'iso_topic_ids', multiSelect: true, editable: false, store: 'IsoTopics',
              displayField: 'name', valueField: 'id'
            }
          ]
        }, {
          border: false,
          layout: { type: 'hbox', align: 'stretch' },
          items: [{
            xtype: 'panel', flex: 1, margins: '0 3 0 0', 
            bodyStyle: 'padding: 3px;', layout: 'anchor',
            itemId: 'agencies', title: 'Agencies', 
            items: [{
              xtype: 'combobox', fieldLabel: 'Source Agency', queryMode: 'remote', triggerAction: 'all',
              minChars: 3, typeAhead: true, name: 'source_agency_id', store: source_agencies,
              displayField: 'name_with_acronym', valueField: 'id' 
            }, {
              xtype: 'combobox', fieldLabel: 'Other Agencies', queryMode: 'local', triggerAction: 'all',
              editable: false, minChars: 3, name: 'agency_ids', store: 'Agencies', displayField: 'name_with_acronym',
              multiSelect: true, valueField: 'id'
            }]
          }, {
            xtype: 'panel', flex: 1, bodyStyle: 'padding: 3px;', layout: 'anchor',
            itemId: 'contacts', title: 'Contacts',
            items: [{
              xtype: 'combobox', fieldLabel: 'Primary Contact', queryMode: 'remote', triggerAction: 'all',
              minChars: 2, typeAhead: true, name: 'primary_contact_id', store: primary_contacts,
              displayField: 'fullname_with_email', valueField: 'id'
            }, {
              xtype: 'combobox', fieldLabel: 'Other Contacts', queryMode: 'local', triggerAction: 'all',
              name: 'person_ids', multiSelect: true, editable: false, store: 'Contacts',
              displayField: 'fullname_with_email', valueField: 'id'
            }]
          }]
        }, {
          itemId: 'links', xtype: 'panel', title: 'Links',
          bodyStyle: 'padding: 3px;',
          dockedItems: [{
            xtype:'toolbar',
            dock: 'top',
            defaults: { scale: 'large' },
            items: [{ text: '<b>New Link</b>', action: 'add_link' }]
          }]
        },{
          itemId: 'locations', xtype: 'panel', title: 'Locations',
          bodyStyle: 'padding: 3px;',
          dockedItems: [{
            xtype:'toolbar',
            dock: 'top',
            defaults: { scale: 'large' },
            items: [{ text: '<b>New Location</b>', action: 'add_location' }]
          }]
        }]
      });       
      
      this.callParent(arguments);
      
      Ext.Ajax.request({
        url: '/catalog/' + this.getRecordId() + '.json',
        success: this.onRequestSuccess,
        scope: this
      });
    },

    buildLocation: function(loc){
      Ext.applyIf(loc, {
        id: '',
        name: '',
        wkt: ''
      });
      
      var loc_markup = {
        xtype: 'fieldcontainer',
        layout: { type: 'hbox', defaultMargins: { right: 3 } },
        fieldDefaults: { labelAlign: 'top' },
        items: [{
          xtype: 'hiddenfield', name: 'locations_attributes['+this.location_count+'][id]', value: loc.id
        }, {
          xtype: 'textfield', fieldLabel: 'Label', flex: 1,
          name: 'locations_attributes['+ this.location_count +'][name]', value: loc.name
        }, {
          xtype: 'textfield', fieldLabel: 'Geom', flex: 3,
          name: 'locations_attributes['+ this.location_count + '][wkt]', value: loc.wkt
        }]
      };        
      this.location_count += 1;
      
      return loc_markup;
    },    
    
    buildLink: function(link){
      Ext.applyIf(link, {
        id: '',
        category: '',
        display_text: '',
        url: ''
      });
      
      var link_markup = {
        xtype: 'fieldcontainer',
        layout: { type: 'hbox', defaultMargins: { right: 3 } },
        fieldDefaults: { labelAlign: 'top' },
        items: [{
          xtype: 'hiddenfield', name: 'links_attributes['+this.link_count+'][id]', value: link.id
        }, {
          xtype: 'textfield', fieldLabel: 'Category', flex: 1,
          name: 'links_attributes['+ this.link_count +'][category]', value: link.category
        }, {
          xtype: 'textfield', fieldLabel: 'Text', flex: 2,
          name: 'links_attributes['+ this.link_count + '][display_text]', value: link.display_text
        }, {
          xtype: 'textfield', fieldLabel: 'URL', flex: 10,
          name: 'links_attributes['+ this.link_count + '][url]', value: link.url
        }]
      };   
      this.link_count += 1;
      return link_markup;     
    },
    
    onRequestSuccess: function(response){
      this.loadRecordData(Ext.JSON.decode(response.responseText));
    },
    
    loadRecordData: function(record){
      this.record = record;
      this.setTitle(this.titleTpl.apply(this.record));
      this.getForm().setValues(this.record);
      
      Ext.each(this.record.links, this.addLink, this);
      
      Ext.each(this.record.locations, this.addLocation, this);
    },
    
    addLink: function(link){
      this.down('#links').add(this.buildLink(link));      
    },
    addLocation: function(loc){
      this.down('#locations').add(this.buildLocation(loc));      
    }
});
#catalog-form.tabbable.tabs-left
  %ul.nav.nav-tabs
    - sections = %w{ general contacts agencies tags links locations sds downloads }
    - sections.each do |section|
      %li{class: (section == sections.first ? 'active' : '')}
        = link_to section.humanize, "##{section}", data: { toggle: 'tab' }
  = nested_form_for [:manager, @catalog], html: { class: 'form' } do |f|
    .tab-content{ style: 'min-height: 200px;'}      
      - unless @catalog.errors.full_messages.empty?
        .alert.alert-error{ style: 'margin: 5px;' }
          %a{ href:"#", class:"close", data: { dismiss:"alert" } }
            &times;
          %h4 Errors prevents this record from being saved
          %ul
            - @catalog.errors.full_messages.each do |err|
              %li= err
      #general.tab-pane.active
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left General Information      
        .content= render 'general_fields', f: f
        
      #contacts.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Contact Information      
        .content= render 'contact_fields', f: f
    
      #agencies.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Agency Information      
        .content= render 'agency_fields', f: f
    
      #tags.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Tags and Collections
        .content= render 'tag_fields', f: f

      #links.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Links
            = f.link_to_add :links, :data => { :target => "#link_fields" }, class: "btn btn-success pull-right" do
              %i.icon-plus.icon-white
              Add a Link
        .content
          .header.row-fluid
            .span2 Category
            .span4 Display Text
            .span4 URL
            .span2.actions Actions
          #link_fields.fields
            = f.fields_for :links
    
      #locations.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Locations
            = f.link_to_add :locations, :data => { :target => "#location_fields" }, class: "btn btn-success pull-right" do
              %i.icon-plus.icon-white
              Add a Location
        .content
          .header.row-fluid
            .span4 Name
            .span6 WKT
            .span2.actions Actions
          #location_fields.fields
            = f.fields_for :locations

      #sds.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Secure Data Services      
        .content= render 'sds_fields', f: f
      
      #downloads.tab-pane
        .navbar.navbar-static-top
          .navbar-inner
            .navbar-text.pull-left Remote Download Urls
            = f.link_to_add :download_urls, :data => { :target => "#download_fields" }, class: "btn btn-success pull-right" do
              %i.icon-plus.icon-white
              Add Download URL
        .content
          .header.row-fluid
            .span4 Name
            .span6 URL
            .span2.actions Actions
          #download_fields.fields
            = f.fields_for :download_urls
            
      .form-actions
        = link_to [:manager, @catalog], class: 'btn btn-inverse' do
          %i.icon-arrow-left.icon-white
          Back
    
        = f.submit "Save Record", class: 'btn btn-primary pull-right'
      
#location_editor.modal.hide.fade
  .modal-header
    %button.close{ type: 'button', data: { dismiss: 'modal' } } &times;
    %h3 Location Editor
  #map.modal-body{ style: 'position: relative; padding: 0; height:400px;', data: { map: 'EditorMap', target: '#map_canvas' } }
    .navbar.navbar-static-top
      .navbar-inner
        .btn-group
          %button.btn{ data: { "openlayers-action" => 'draw', type: 'point' } }
            %i.icon-map-marker
            Point
          %button.btn{ data: { "openlayers-action" => 'draw', type: 'line' } }
            %i.icon-minus
            Line
          %button.btn{ data: { "openlayers-action" => 'draw', type: 'polygon' } }
            %i.icon-star-empty
            Polygon
        .btn-group
          %button.btn{ data: { "openlayers-action" => 'clear' } }
            %i.icon-eraser
            Clear
          %button.btn{ data: { "openlayers-action" => 'reset' } }
            %i.icon-undo
            Reset  
    #map_canvas{style: "width:100%; height: 359px;", data: { projection: 'EPSG:3338', displayProjection: 'EPSG:4326', layers: 'TILE.EPSG:3338.*' } }
  .modal-footer
    = link_to '#', class: 'btn', data: { dismiss: 'modal' } do
      Cancel
    = link_to '#', class: 'btn btn-primary', data: { 'openlayers-action' => 'update-location' } do
      Update location
    

/ refresh because of select2 moving things around on the page
:javascript
  $(document).ready(function() {
    var mapwrap = $('[data-map="EditorMap"]')
    var map = new EditorMap(mapwrap.data('target'));
  
    // $('[data-spy="scroll"]').each(function() {
    //   $(this).delay(500).scrollspy('refresh');
    // });
    
    var input, feature, active_draw_button;
    // var catalog_map = $('#map').data('map');
    // var map = catalog_map.map;
    
    $('#location_editor').on('shown', function() {
      map.resize();
    });
    
    $(document).on('click', '[data-openlayers-action="edit-location"]', function(evt) {
      evt.preventDefault();
      
      input = $($(this).data('target'));
      var feature = map.addFeature($(input).val());      
      $('#location_editor').modal('show');
    });
    
    $(document).on('click', '.btn[data-openlayers-action="update-location"]', function(evt) {
      evt.preventDefault();
      input.val(map.getWKT());      
      $('#location_editor').modal('hide');
    });
  })
  

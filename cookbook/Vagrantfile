# -*- mode: ruby -*-
# vi: set ft=ruby :
DEVVM_IP = '192.168.222.225'

Vagrant.configure('2') do |config|
  config.vm.hostname = 'glynx-development'

  config.vm.box = 'opscode_centos-6.4_provisionerless'
  config.vm.box_url = 'https://opscode-vm.s3.amazonaws.com/vagrant/opscode_centos-6.4_provisionerless.box'

  config.vm.network :private_network, ip: DEVVM_IP
  
  config.vm.synced_folder '../', '/www/glynx/current'
  # type: "rsync", rsync__exclude: [".git/", "cookbook/", '.kitchen/', '.gems/'],
  # rsync__args: ["--verbose", "--archive", "-z"],
  # rsync__auto: true

  config.vm.provider :virtualbox do |vb|
    vb.gui = true
    vb.customize ['modifyvm', :id, '--memory', '4096']
    vb.customize ['modifyvm', :id, '--cpus', '2']
    vb.customize ['modifyvm', :id, '--natdnsproxy1', 'off']
    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'off']
  end

  if Vagrant.has_plugin?('vagrant-cachier')
    config.cache.scope  = :box
  end

  config.berkshelf.enabled = true
  config.omnibus.chef_version = :latest

  # Force ip4/6 requests to be made seperatly
  config.vm.provision :shell, inline: 'if [ ! $(grep single-request-reopen /etc/sysconfig/network) ]; then echo RES_OPTIONS=single-request-reopen >> /etc/sysconfig/network && service network restart; fi'

  config.vm.provision :chef_solo do |chef|
    chef.json = {
      chruby: {
        default: 'embedded'
      },
      unicorn: {
        listen: '/var/run/unicorn/',
        pid: '/www/glynx/current/tmp/pids/unicorn.pid',
        stderr_path: '/www/glynx/current/log/unicorn.stderr.log',
        stdout_path: '/www/glynx/current/log/unicorn.stdout.log'
      },
      glynx: {
        account: 'vagrant',
        environment: 'development',
        paths: {
          shared: '/www/glynx/current',
          config: '/www/glynx/current/config',
          initializers: '/www/glynx/current/config/initializers',
          archive: '/www/glynx/current/archive',
          uploads: '/www/glynx/current/uploads',
          cms: 'www/glynx/current/public/cms',
          repos: 'www/glynx/current/repos'
        },
        links: {
          archive: { action: :nothing },
          uploads: { action: :nothing },
          cms:     { action: :nothing },
          repos:   { action: :nothing }
        },
        mounts: {
          catalog_silo: { action: :nothing }
        },
        sunspot: {
          solr: {
            hostname: DEVVM_IP,
            path: '/solr/development',
            log_level: 'INFO'
          }
        }
      },
      postgresql: {
        password: {
          postgres: 'fasdfasdfasdfasdf'
        },
        config: {
          listen_addresses: '*'
        }
      }
    }

    chef.run_list = [
      'recipe[glynx::database]',
      'recipe[glynx::memcached]',
      'recipe[glynx::redis]',
      'recipe[glynx::web]',
      'recipe[glynx::elasticsearch]'
    ]
  end
end
